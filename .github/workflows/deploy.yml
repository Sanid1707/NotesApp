# # name: Deploy to AWS EC2

# # on:
# #   push:
# #     branches:
# #       - Backend_Hosting

# # jobs:
# #   deploy:
# #     runs-on: ubuntu-latest

# #     steps:
# #     # Step 1: Check out the repository
# #     - name: Checkout code
# #       uses: actions/checkout@v3

# #     # Step 2: Set up Docker
# #     - name: Set up Docker
# #       uses: docker/setup-buildx-action@v2

# #     # Step 3: Log in to the EC2 instance via SSH
# #     - name: SSH into EC2
# #       uses: appleboy/ssh-action@v0.1.7
# #       with:
# #         host: ${{ secrets.EC2_HOST }}
# #         username: ${{ secrets.EC2_USER }}
# #         key: ${{ secrets.EC2_SSH_KEY }}
# #         script: |
# #           # Pull the repository and build the Docker image
# #           git clone https://github.com/Sanid1707/NotesApp.git
# #           cd NotesApp
# #           docker compose up .

# #           # Stop and remove existing container (if any)
# #           docker stop myapi || true && docker rm myapi || true

# #           # Run the new container
# #           docker run -d -p 80:80 --name myapi myapi:latest
# name: Deploy to AWS EC2

# on:
#   push:
#     branches:
#       - Backend_Hosting

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#     # Step 1: Check out the repository
#     - name: Checkout code
#       uses: actions/checkout@v3

#     # Step 2: Set up Docker
#     - name: Set up Docker
#       uses: docker/setup-buildx-action@v2

#     # Step 3: Log in to the EC2 instance via SSH
#     - name: SSH into EC2
#       uses: appleboy/ssh-action@v0.1.7
#       with:
#         host: ${{ secrets.EC2_HOST }}
#         username: ${{ secrets.EC2_USER }}
#         key: ${{ secrets.EC2_SSH_KEY }}
#         script: |
#           # Pull the repository
#           git clone https://github.com/Sanid1707/NotesApp.git || (cd NotesApp && git pull)
          
